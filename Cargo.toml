[package]
name = "rust_on_android_example"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["lib", "cdylib"]

[package.metadata.android]
# Specifies the package property of the manifest.
package = "org.jschiefer.rust_on_android_example"

# Specifies the array of targets to build for.
build_targets = [ "armv7-linux-androideabi", "aarch64-linux-android", "i686-linux-android", "x86_64-linux-android" ]

# Name for final APK file.
# Defaults to package name.
apk_name = "rust_on_android_example"

# Path to your application's resources folder.
# If not specified, resources will not be included in the APK.
#resources = "path/to/resources_folder"

# Path to the folder containing your application's assets.
# If not specified, assets will not be included in the APK.
#assets = "path/to/assets_folder"

# Name for final APK file.
# Defaults to package name.
#apk_name = "myapp"

[package.metadata.android.signing.release]
path = "DisposableTestingKeys.jks"
keystore_password = "test123"

# See https://developer.android.com/guide/topics/manifest/uses-sdk-element
#
# Defaults to a `min_sdk_version` of 23 and `target_sdk_version` of 30 (or lower if the detected NDK doesn't support this).
[package.metadata.android.sdk]
min_sdk_version = 23
target_sdk_version = 30
max_sdk_version = 29

# Folder containing extra shared libraries intended to be dynamically loaded at runtime.
# Files matching `libs_folder/${android_abi}/*.so` are added to the apk
# according to the specified build_targets.
#runtime_libs = "path/to/libs_folder"

[dependencies]

[target.'cfg(target_os = "android")'.dependencies]
ndk-glue = "^0.7.0"
jni = { version = "0.19", default-features = false }


[profile.release]
lto = true
debug = false
debug-assertions = false
overflow-checks = true
panic = 'abort'
rpath = false
codegen-units = 1
opt-level = 3
strip = "debuginfo"
